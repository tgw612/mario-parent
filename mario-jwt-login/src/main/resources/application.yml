server:
  port: 8088

spring:
  datasource:
    url: jdbc:mysql://192.168.40.87:3306/user?useUnicode=true&characterEncoding=utf-8
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: 999999
    max-idle: 10
    max-wait: 10000
    min-idle: 5
    initial-size: 5
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: false





## REDIS (RedisProperties)
## Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器地址
#spring.redis.host=localhost
## Redis服务器连接端口
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=0


#jwt认证和授权
#采用springsecurity/jwt
#在header放入Authorization token
#springsecurity可以针对每个api授予访问权限和角色访问控制
#问题是如何构建分布式不同项目的控制?
